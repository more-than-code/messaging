// protoc --go_out=pb --go_opt=paths=source_relative --go-grpc_out=pb --go-grpc_opt=paths=source_relative massaging.proto

syntax = "proto3";
package pb;

option go_package = "./pb";

enum VerificationCodeGenerationStatus {
    VERIFICATION_CODE_GENERATION_STATUS_DONE = 0;
    VERIFICATION_CODE_GENERATION_STATUS_INVALID_ARGUMENTS = 1;
	VERIFICATION_CODE_GENERATION_STATUS_SENDING_TOO_FREQUENTLY = 2;
    VERIFICATION_CODE_GENERATION_STATUS_NEEDING_RESENDING = 3;
}

enum VerificationCodeValidationStatus {
    VERIFICATION_CODE_VALIDATION_STATUS_VALID = 0;
    VERIFICATION_CODE_VALIDATION_STATUS_INVALID = 1;
    VERIFICATION_CODE_VALIDATION_STATUS_EXPIRED = 2;
	VERIFICATION_CODE_VALIDATION_STATUS_MAXIMUM_ATTEMPTS = 3;
}

message GenerateVerificationCodeRequest {
  string phone_or_email = 1;
  string subject = 2;
  string message_template = 3;
}

message GenerateVerificationCodeResponse {
  VerificationCodeGenerationStatus status = 1;
  string msg = 2;
}

message ValidateVerificationCodeRequest {
  string phone_or_email = 1;
  string verification_code = 2;
}

message ValidateVerificationCodeResponse {
  VerificationCodeValidationStatus status = 1;
  string msg = 2; 
}

message Attachment {
  string name = 1;
  bytes content = 2;
}

message SendEmailWithAttachmentRequest {
  string to = 1; 
  string subject = 2;
  string message = 3;
  Attachment attachment = 4;
}

message SendEmailWithAttachmentResponse {
  bool success = 1;
  string msg = 2;
}

service Messaging {
  rpc GenerateVerificationCode (GenerateVerificationCodeRequest) returns  (GenerateVerificationCodeResponse) {
  }
  rpc ValidateVerificationCode (ValidateVerificationCodeRequest) returns (ValidateVerificationCodeResponse) {
  }
  rpc SendEmailWithAttachment (SendEmailWithAttachmentRequest) returns (SendEmailWithAttachmentResponse) {
  }
}
